// ##### Global Mixins ##### //

// Create short media query blocks:

@mixin bp($point) {

  @if $point == screen1 {
    @media (min-width: $screen1) { @content; }

  } @else if $point == screen2 {
    @media (min-width: $screen2) { @content; }

  } @else if $point == screen3 {
    @media (min-width: $screen3) { @content; }

  } @else if $point == screen4 {
    @media (min-width: $screen4) { @content; }
  }

}

/*

Selector pattern using above media query mixin:

.selector {
  property: $value;

  @include bp(screen1) {
    property: $value;
  }

  @include bp(screen2) {
    property: $value;
  }

  @include bp(screen3) {
    property: $value;
  }

}

*/

// No bullet unordered lists

%no-bullet-ul {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }

}

// Hide/show something visually but not for screen readers

%hide {
  position: absolute;
  left: -9999px;
}

%show {
  position: static;
  left: auto;
}

// Navigation item styles

%nav-item {
  display: block;
  padding: 10px;
  border: 1px solid $color-dark-gray;
  background: $color-white;
  color: $color-dark-gray;
  font-size: 1.1em;
  text-decoration: none;

  &:hover:not(div) {
    color: $color-orange;
  }

}

// Headings generator

@mixin headings($from: 1, $to: 6) {
  @for $i from $from through $to {
    h#{$i} {
      @content
    }
  }
}

// Clear floats

%clearfix {

  &::after {
    display: table;
    clear: both;
    content: '';
  }

}

// Wrap long strings of unbroken text to prevent text overflow

%overflow-wrap {
  overflow-wrap: break-word; // all except IE
  word-wrap: break-word; // Legacy IE browsers
  word-break: break-all; // Modern Windows browsers
  hyphens: auto;
}
